// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeviceMessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DeviceMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace textsecure {

namespace {

const ::google::protobuf::Descriptor* ProvisioningUuid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProvisioningUuid_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProvisionEnvelope_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProvisionEnvelope_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProvisionMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProvisionMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_DeviceMessages_2eproto() {
  protobuf_AddDesc_DeviceMessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "DeviceMessages.proto");
  GOOGLE_CHECK(file != NULL);
  ProvisioningUuid_descriptor_ = file->message_type(0);
  static const int ProvisioningUuid_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisioningUuid, uuid_),
  };
  ProvisioningUuid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProvisioningUuid_descriptor_,
      ProvisioningUuid::default_instance_,
      ProvisioningUuid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisioningUuid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisioningUuid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProvisioningUuid));
  ProvisionEnvelope_descriptor_ = file->message_type(1);
  static const int ProvisionEnvelope_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionEnvelope, publickey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionEnvelope, body_),
  };
  ProvisionEnvelope_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProvisionEnvelope_descriptor_,
      ProvisionEnvelope::default_instance_,
      ProvisionEnvelope_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionEnvelope, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionEnvelope, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProvisionEnvelope));
  ProvisionMessage_descriptor_ = file->message_type(2);
  static const int ProvisionMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, identitykeyprivate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, provisioningcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, useragent_),
  };
  ProvisionMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProvisionMessage_descriptor_,
      ProvisionMessage::default_instance_,
      ProvisionMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProvisionMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProvisionMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_DeviceMessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProvisioningUuid_descriptor_, &ProvisioningUuid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProvisionEnvelope_descriptor_, &ProvisionEnvelope::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProvisionMessage_descriptor_, &ProvisionMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_DeviceMessages_2eproto() {
  delete ProvisioningUuid::default_instance_;
  delete ProvisioningUuid_reflection_;
  delete ProvisionEnvelope::default_instance_;
  delete ProvisionEnvelope_reflection_;
  delete ProvisionMessage::default_instance_;
  delete ProvisionMessage_reflection_;
}

void protobuf_AddDesc_DeviceMessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024DeviceMessages.proto\022\ntextsecure\" \n\020Pr"
    "ovisioningUuid\022\014\n\004uuid\030\001 \001(\t\"4\n\021Provisio"
    "nEnvelope\022\021\n\tpublicKey\030\001 \001(\014\022\014\n\004body\030\002 \001"
    "(\014\"k\n\020ProvisionMessage\022\032\n\022identityKeyPri"
    "vate\030\002 \001(\014\022\016\n\006number\030\003 \001(\t\022\030\n\020provisioni"
    "ngCode\030\004 \001(\t\022\021\n\tuserAgent\030\005 \001(\t", 231);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DeviceMessages.proto", &protobuf_RegisterTypes);
  ProvisioningUuid::default_instance_ = new ProvisioningUuid();
  ProvisionEnvelope::default_instance_ = new ProvisionEnvelope();
  ProvisionMessage::default_instance_ = new ProvisionMessage();
  ProvisioningUuid::default_instance_->InitAsDefaultInstance();
  ProvisionEnvelope::default_instance_->InitAsDefaultInstance();
  ProvisionMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_DeviceMessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_DeviceMessages_2eproto {
  StaticDescriptorInitializer_DeviceMessages_2eproto() {
    protobuf_AddDesc_DeviceMessages_2eproto();
  }
} static_descriptor_initializer_DeviceMessages_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ProvisioningUuid::kUuidFieldNumber;
#endif  // !_MSC_VER

ProvisioningUuid::ProvisioningUuid()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:textsecure.ProvisioningUuid)
}

void ProvisioningUuid::InitAsDefaultInstance() {
}

ProvisioningUuid::ProvisioningUuid(const ProvisioningUuid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:textsecure.ProvisioningUuid)
}

void ProvisioningUuid::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProvisioningUuid::~ProvisioningUuid() {
  // @@protoc_insertion_point(destructor:textsecure.ProvisioningUuid)
  SharedDtor();
}

void ProvisioningUuid::SharedDtor() {
  if (uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uuid_;
  }
  if (this != default_instance_) {
  }
}

void ProvisioningUuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProvisioningUuid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProvisioningUuid_descriptor_;
}

const ProvisioningUuid& ProvisioningUuid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeviceMessages_2eproto();
  return *default_instance_;
}

ProvisioningUuid* ProvisioningUuid::default_instance_ = NULL;

ProvisioningUuid* ProvisioningUuid::New() const {
  return new ProvisioningUuid;
}

void ProvisioningUuid::Clear() {
  if (has_uuid()) {
    if (uuid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      uuid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProvisioningUuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textsecure.ProvisioningUuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textsecure.ProvisioningUuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textsecure.ProvisioningUuid)
  return false;
#undef DO_
}

void ProvisioningUuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textsecure.ProvisioningUuid)
  // optional string uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:textsecure.ProvisioningUuid)
}

::google::protobuf::uint8* ProvisioningUuid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:textsecure.ProvisioningUuid)
  // optional string uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textsecure.ProvisioningUuid)
  return target;
}

int ProvisioningUuid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uuid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProvisioningUuid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProvisioningUuid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProvisioningUuid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProvisioningUuid::MergeFrom(const ProvisioningUuid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_uuid(from.uuid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProvisioningUuid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisioningUuid::CopyFrom(const ProvisioningUuid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisioningUuid::IsInitialized() const {

  return true;
}

void ProvisioningUuid::Swap(ProvisioningUuid* other) {
  if (other != this) {
    std::swap(uuid_, other->uuid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProvisioningUuid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProvisioningUuid_descriptor_;
  metadata.reflection = ProvisioningUuid_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProvisionEnvelope::kPublicKeyFieldNumber;
const int ProvisionEnvelope::kBodyFieldNumber;
#endif  // !_MSC_VER

ProvisionEnvelope::ProvisionEnvelope()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:textsecure.ProvisionEnvelope)
}

void ProvisionEnvelope::InitAsDefaultInstance() {
}

ProvisionEnvelope::ProvisionEnvelope(const ProvisionEnvelope& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:textsecure.ProvisionEnvelope)
}

void ProvisionEnvelope::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  publickey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProvisionEnvelope::~ProvisionEnvelope() {
  // @@protoc_insertion_point(destructor:textsecure.ProvisionEnvelope)
  SharedDtor();
}

void ProvisionEnvelope::SharedDtor() {
  if (publickey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete publickey_;
  }
  if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete body_;
  }
  if (this != default_instance_) {
  }
}

void ProvisionEnvelope::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProvisionEnvelope::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProvisionEnvelope_descriptor_;
}

const ProvisionEnvelope& ProvisionEnvelope::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeviceMessages_2eproto();
  return *default_instance_;
}

ProvisionEnvelope* ProvisionEnvelope::default_instance_ = NULL;

ProvisionEnvelope* ProvisionEnvelope::New() const {
  return new ProvisionEnvelope;
}

void ProvisionEnvelope::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_publickey()) {
      if (publickey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        publickey_->clear();
      }
    }
    if (has_body()) {
      if (body_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        body_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProvisionEnvelope::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textsecure.ProvisionEnvelope)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes publicKey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_publickey()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_body;
        break;
      }

      // optional bytes body = 2;
      case 2: {
        if (tag == 18) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textsecure.ProvisionEnvelope)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textsecure.ProvisionEnvelope)
  return false;
#undef DO_
}

void ProvisionEnvelope::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textsecure.ProvisionEnvelope)
  // optional bytes publicKey = 1;
  if (has_publickey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->publickey(), output);
  }

  // optional bytes body = 2;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->body(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:textsecure.ProvisionEnvelope)
}

::google::protobuf::uint8* ProvisionEnvelope::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:textsecure.ProvisionEnvelope)
  // optional bytes publicKey = 1;
  if (has_publickey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->publickey(), target);
  }

  // optional bytes body = 2;
  if (has_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->body(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textsecure.ProvisionEnvelope)
  return target;
}

int ProvisionEnvelope::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes publicKey = 1;
    if (has_publickey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->publickey());
    }

    // optional bytes body = 2;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProvisionEnvelope::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProvisionEnvelope* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProvisionEnvelope*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProvisionEnvelope::MergeFrom(const ProvisionEnvelope& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_publickey()) {
      set_publickey(from.publickey());
    }
    if (from.has_body()) {
      set_body(from.body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProvisionEnvelope::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisionEnvelope::CopyFrom(const ProvisionEnvelope& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisionEnvelope::IsInitialized() const {

  return true;
}

void ProvisionEnvelope::Swap(ProvisionEnvelope* other) {
  if (other != this) {
    std::swap(publickey_, other->publickey_);
    std::swap(body_, other->body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProvisionEnvelope::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProvisionEnvelope_descriptor_;
  metadata.reflection = ProvisionEnvelope_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProvisionMessage::kIdentityKeyPrivateFieldNumber;
const int ProvisionMessage::kNumberFieldNumber;
const int ProvisionMessage::kProvisioningCodeFieldNumber;
const int ProvisionMessage::kUserAgentFieldNumber;
#endif  // !_MSC_VER

ProvisionMessage::ProvisionMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:textsecure.ProvisionMessage)
}

void ProvisionMessage::InitAsDefaultInstance() {
}

ProvisionMessage::ProvisionMessage(const ProvisionMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:textsecure.ProvisionMessage)
}

void ProvisionMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  identitykeyprivate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provisioningcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useragent_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProvisionMessage::~ProvisionMessage() {
  // @@protoc_insertion_point(destructor:textsecure.ProvisionMessage)
  SharedDtor();
}

void ProvisionMessage::SharedDtor() {
  if (identitykeyprivate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete identitykeyprivate_;
  }
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete number_;
  }
  if (provisioningcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete provisioningcode_;
  }
  if (useragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete useragent_;
  }
  if (this != default_instance_) {
  }
}

void ProvisionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProvisionMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProvisionMessage_descriptor_;
}

const ProvisionMessage& ProvisionMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_DeviceMessages_2eproto();
  return *default_instance_;
}

ProvisionMessage* ProvisionMessage::default_instance_ = NULL;

ProvisionMessage* ProvisionMessage::New() const {
  return new ProvisionMessage;
}

void ProvisionMessage::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_identitykeyprivate()) {
      if (identitykeyprivate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        identitykeyprivate_->clear();
      }
    }
    if (has_number()) {
      if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        number_->clear();
      }
    }
    if (has_provisioningcode()) {
      if (provisioningcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        provisioningcode_->clear();
      }
    }
    if (has_useragent()) {
      if (useragent_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        useragent_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProvisionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textsecure.ProvisionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes identityKeyPrivate = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_identitykeyprivate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_number;
        break;
      }

      // optional string number = 3;
      case 3: {
        if (tag == 26) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "number");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_provisioningCode;
        break;
      }

      // optional string provisioningCode = 4;
      case 4: {
        if (tag == 34) {
         parse_provisioningCode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provisioningcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->provisioningcode().data(), this->provisioningcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "provisioningcode");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_userAgent;
        break;
      }

      // optional string userAgent = 5;
      case 5: {
        if (tag == 42) {
         parse_userAgent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useragent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->useragent().data(), this->useragent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "useragent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textsecure.ProvisionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textsecure.ProvisionMessage)
  return false;
#undef DO_
}

void ProvisionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textsecure.ProvisionMessage)
  // optional bytes identityKeyPrivate = 2;
  if (has_identitykeyprivate()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->identitykeyprivate(), output);
  }

  // optional string number = 3;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->number(), output);
  }

  // optional string provisioningCode = 4;
  if (has_provisioningcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provisioningcode().data(), this->provisioningcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "provisioningcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->provisioningcode(), output);
  }

  // optional string userAgent = 5;
  if (has_useragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useragent().data(), this->useragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "useragent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->useragent(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:textsecure.ProvisionMessage)
}

::google::protobuf::uint8* ProvisionMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:textsecure.ProvisionMessage)
  // optional bytes identityKeyPrivate = 2;
  if (has_identitykeyprivate()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->identitykeyprivate(), target);
  }

  // optional string number = 3;
  if (has_number()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->number(), target);
  }

  // optional string provisioningCode = 4;
  if (has_provisioningcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->provisioningcode().data(), this->provisioningcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "provisioningcode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->provisioningcode(), target);
  }

  // optional string userAgent = 5;
  if (has_useragent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useragent().data(), this->useragent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "useragent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->useragent(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textsecure.ProvisionMessage)
  return target;
}

int ProvisionMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes identityKeyPrivate = 2;
    if (has_identitykeyprivate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->identitykeyprivate());
    }

    // optional string number = 3;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->number());
    }

    // optional string provisioningCode = 4;
    if (has_provisioningcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->provisioningcode());
    }

    // optional string userAgent = 5;
    if (has_useragent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->useragent());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProvisionMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProvisionMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProvisionMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProvisionMessage::MergeFrom(const ProvisionMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_identitykeyprivate()) {
      set_identitykeyprivate(from.identitykeyprivate());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
    if (from.has_provisioningcode()) {
      set_provisioningcode(from.provisioningcode());
    }
    if (from.has_useragent()) {
      set_useragent(from.useragent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProvisionMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProvisionMessage::CopyFrom(const ProvisionMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProvisionMessage::IsInitialized() const {

  return true;
}

void ProvisionMessage::Swap(ProvisionMessage* other) {
  if (other != this) {
    std::swap(identitykeyprivate_, other->identitykeyprivate_);
    std::swap(number_, other->number_);
    std::swap(provisioningcode_, other->provisioningcode_);
    std::swap(useragent_, other->useragent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProvisionMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProvisionMessage_descriptor_;
  metadata.reflection = ProvisionMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace textsecure

// @@protoc_insertion_point(global_scope)
